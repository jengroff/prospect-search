version: "3.8"

# the database service uses a base postgres image without adding any new commands,
# which means we don't need a "db" directory or db-specific Dockerfile
# it also maps port 5432 locally

# using 'volumes' in both services lets us store data outside of the container lifecycle.
# otherwise, when we stop the Docker container and start it again, everything would
# recreated from scratch from the image

services:


  database:
    container_name: 
    environment:
    image: postgres:13.2
    ports:
      - 5433:5432
    volumes:
      - prospect-database:/var/lib/postgresql/data


  elasticsearch:
    container_name: prospect-search-elasticsearch
    environment:
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - bootstrap.memory_lock=true
      - discovery.type=single-node
    image: elasticsearch:7.10.1
    ports:
      - 9200:9200
    volumes:
      - prospect-search-elasticsearch:/usr/share/elasticsearch/data


  server:
    build:
      context: ./server
    container_name: prospect-server
    depends_on:
      - database
      - elasticsearch
    environment:
    command: [ "bash", "start.sh" ]
    ports:
      - 8003:8000
    volumes:
      - ./server:/usr/src/app


  client:
    build:
      context: ./client
    command: [ "npm", "start" ]
    container_name: prospect-search-client
    depends_on:
      - server
    ports:
      - 3000:3000
    volumes:
      - ./client:/usr/src/app


volumes:
  prospect-database:
  prospect-search-elasticsearch:
